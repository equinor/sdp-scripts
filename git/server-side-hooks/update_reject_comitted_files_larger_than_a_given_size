#!/usr/bin/env bash

function make_human_readable() {
  file_size="${1}"
  metric="B"
  i=0
  while [ $file_size -gt 1000 ]; do
    file_size=$(expr $file_size / 1000)
    i=$(expr $i + 1)
  done
  if [ "$i" = "0" ]; then metric="B"
  elif [ "$i" = "1" ]; then metric="KB"
  elif [ "$i" = "2" ]; then metric="MB"
  elif [ "$i" = "2" ]; then metric="GB"
  elif [ "$i" = "2" ]; then metric="TB"
  fi
  echo "${file_size}${metric}"
}
# 10MB file size limit
FILE_SIZE_LIMIT=10000000
FILE_SIZE_LIMIT_HUMAN_READABLE=$(make_human_readable $FILE_SIZE_LIMIT)
OLD_REVISION=$2
NEW_REVISION=$3
FAIL=0

# Get a list of all the new files being comitted
NEW_FILES=$(git diff-tree --no-commit-id --name-only -r $NEW_REVISION)
# For each of those new files...
for file in $NEW_FILES; do
   # get their file size in bytes
   file_size=$(git cat-file -s $NEW_REVISION:$file)
   # then if they exceed the commit size limit
   if [[ $file_size -gt $FILE_SIZE_LIMIT ]]; then
     file_size_human_readable=$(make_human_readable $file_size)
     echo "File '$file' is too large (${file_size_human_readable}) to be committed"
     FAIL=1
   fi
done

# If the FAIL flag were raised, fail
if [ "$FAIL" != "0" ]; then
  echo "Use LFS for files larger than ${FILE_SIZE_LIMIT_HUMAN_READABLE}."
  exit 2
fi

